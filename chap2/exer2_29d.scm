; (define (make-mobile left right)
;   (list left right))
; (define (left-branch mobile) (car mobile))
; (define (right-branch mobile) (car (cdr mobile)))
(define (make-mobile left right) (cons left right))
(define (left-branch mobile) (car mobile))
(define (right-branch mobile) (cdr mobile))
(define (total-weight mobile)
  (define left (left-branch mobile))
  (define right (right-branch mobile))
  (+ (branch-weight left) (branch-weight right)))
(define (balance? mobile)
  (define left (left-branch mobile))
  (define right (right-branch mobile))
  (cond ((and (not (pair? (branch-structure left)))
              (not (pair? (branch-structure right))))
         (= (branch-moment left) (branch-moment right)))
        ((not (pair? (branch-structure left)))
         (and (balance? (branch-structure right))
              (= (branch-moment left) (branch-moment right))))
        ((not (pair? (branch-structure right)))
         (and (balance? (branch-structure left))
              (= (branch-moment left) (branch-moment right))))
        (else
          (and (balance? (branch-structure left))
               (balance? (branch-structure right))
               (= (branch-moment left) (branch-moment right))))))

; (define (make-branch length structure)
;   (list length structure))
; (define (branch-length branch) (car branch))
; (define (branch-structure branch) (car (cdr branch)))
(define (make-branch length structure) (cons length structure))
(define (branch-length branch) (car branch))
(define (branch-structure branch) (cdr branch))
(define (branch-weight branch)
  (if (pair? (branch-structure branch))
      (total-weight (branch-structure branch))
      (branch-structure branch)))
(define (branch-moment branch)
  (* (branch-length branch) (branch-weight branch)))

;; test
(define left-1 (make-branch 5 9))
(define right-1 (make-branch 9 5))
(define mobile-1 (make-mobile left-1 right-1))
(define left-2 (make-branch 8 4))
(define right-2 (make-branch 3 mobile-1))
(define mobile-2 (make-mobile left-2 right-2))
(display (total-weight mobile-1))
(newline)
(display (total-weight mobile-2))
(newline)
(display (balance? mobile-1))
(newline)
(display (balance? mobile-2))
(newline)
